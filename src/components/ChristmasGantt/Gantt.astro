---
import { complexRecipes } from '../../pages/cooking/christmas/content.ts';
import { buildTasksFromRecipes } from './logic.ts';
import './Gantt.css';

const { eve, day } = buildTasksFromRecipes(complexRecipes);
---

<div id="eveTimeline"></div>
<div id="dayTimeline"></div>

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"
></script>
<script type="text/javascript" define:vars={{ eve, day }}>
  google.charts.load('current', { packages: ['timeline'] });
  google.charts.setOnLoadCallback(drawChart);
  function drawChart() {
    var eveContainer = document.getElementById('eveTimeline');
    var eveChart = new google.visualization.Timeline(eveContainer);
    var eveDataTable = new google.visualization.DataTable();
    eveDataTable.addColumn({ type: 'string', id: 'Room' });
    eveDataTable.addColumn({ type: 'string', id: 'Name' });
    eveDataTable.addColumn({ type: 'string', id: 'style', role: 'style' });
    eveDataTable.addColumn({ type: 'date', id: 'Start' });
    eveDataTable.addColumn({ type: 'date', id: 'End' });
    eveDataTable.addRows([
      ...eve.map(({ group, name, color, startDate, endDate }) => [
        group,
        name.split('.')[1],
        color,
        new Date(startDate),
        new Date(endDate),
      ]),
    ]);

    var options = {
      timeline: { colorByRowLabel: true },
      alternatingRowStyle: false,
      backgroundColor: '#2c2c2c',
      fontName: 'RobotoSlab',
    };

    eveChart.draw(eveDataTable, options);

    var dayContainer = document.getElementById('dayTimeline');
    var dayChart = new google.visualization.Timeline(dayContainer);
    var dayDataTable = new google.visualization.DataTable();
    dayDataTable.addColumn({ type: 'string', id: 'Room' });
    dayDataTable.addColumn({ type: 'string', id: 'Name' });
    dayDataTable.addColumn({ type: 'string', id: 'style', role: 'style' });
    dayDataTable.addColumn({ type: 'date', id: 'Start' });
    dayDataTable.addColumn({ type: 'date', id: 'End' });
    dayDataTable.addRows([
      ...day.map(({ group, name, color, startDate, endDate }) => [
        group,
        name.split('.')[1],
        color,
        new Date(startDate),
        new Date(endDate),
      ]),
    ]);

    dayChart.draw(dayDataTable, options);
  }
</script>
